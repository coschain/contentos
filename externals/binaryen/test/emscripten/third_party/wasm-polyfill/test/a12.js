function asmModule($a,$b,$c){'use asm';
var a=new $a.Int8Array($c);
var b=new $a.Uint8Array($c);
var c=new $a.Int16Array($c);
var d=new $a.Uint16Array($c);
var e=new $a.Int32Array($c);
var f=new $a.Uint32Array($c);
var g=new $a.Float32Array($c);
var h=new $a.Float64Array($c);
var i=$a.Math.imul;
var j=$a.Math.fround;
var $d=$a.Math.acos;
var $e=$a.Math.asin;
var $f=$a.Math.atan;
var $g=$a.Math.cos;
var $h=$a.Math.sin;
var $i=$a.Math.tan;
var $j=$a.Math.exp;
var $k=$a.Math.log;
var $l=$a.Math.ceil;
var $m=$a.Math.floor;
var $n=$a.Math.sqrt;
var $o=$a.Math.abs;
var $p=$a.Math.min;
var $q=$a.Math.max;
var $r=$a.Math.atan2;
var $s=$a.Math.pow;
var $t=$a.Math.clz32;
var $u=$a.NaN;
var $v=$a.Infinity;
function $w(k,l,m){
k=k|0;l=+l;m=j(m);
var n=0.;
k=i((k,3),k);
k=i(k,(k,3));
k=i(k,k);
k=i(1,2);
l=($d(l),$d(h[0]));
l=($e(l),$d(h[0]));
l=($f(l),$d(h[0]));
l=($g(l),$d(h[0]));
l=($h(l),$d(h[0]));
l=($i(l),$d(h[0]));
l=($k(l),$d(h[0]));
l=($l(l),$l(h[0]));
m=(j($l(m)),j($l(g[0])));
l=($m(l),$m(h[0]));
m=(j($m(m)),j($m(g[0])));
l=($n(l),$n(h[0]));
m=(j($n(m)),j($n(g[0])));
l=($o(l),$o(h[0]));
k=($o(k|0),$o(a[0]|0));
m=(j($o(m)),j($o(g[0])));
l=($r(l,l),$r(h[0],h[0]));
l=($s(l,l),$s(h[0],h[0]));
n=($t(k),$d(h[0]));
l=(l=$p(1.,l),l=$p(1.,l,h[0]));
k=($p(1,k|0),k=$p(1,k+1|0,a[0]|0));
l=($q(1.,l),l=$q(1.,l,h[0]));
k=($q(1,k|0),k=$q(1,k+1|0,a[0]|0));
n=+(i(1,2)|0);
k=~~$h(1.);
n=$s(+g[0],h[0]);
n=$p(+g[0],h[0]);
n=$h(+g[0]);
n=$h(h[0]);
}
return $w;
}
